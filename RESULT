
===== PREPARING REQUIRED DATA =====

Building prefix dict from /home/jiazhi/Workshop/common-voice-zh-tw/scripts/dict.txt.big ...
Loading model from cache /tmp/jieba.ufe63d437a4894b8c7d3a0a0158031718.cache
Loading model cost 0.815 seconds.
Prefix dict has been built succesfully.
Preparing AM data... DONE
Preparing LM data... DONE
Program `prepare_data.py` ends succesfully.

===== PREPARING ACOUSTIC DATA =====


===== FEATURES EXTRACTION =====

steps/make_mfcc.sh --nj 4 --cmd run.pl data/train exp/make_mfcc/train mfcc
utils/validate_data_dir.sh: Successfully validated data-directory data/train
steps/make_mfcc.sh: [info]: no segments file exists: assuming wav.scp indexed by utterance.
steps/make_mfcc.sh: Succeeded creating MFCC features for train
steps/make_mfcc.sh --nj 4 --cmd run.pl data/test exp/make_mfcc/test mfcc
utils/validate_data_dir.sh: Successfully validated data-directory data/test
steps/make_mfcc.sh: [info]: no segments file exists: assuming wav.scp indexed by utterance.
steps/make_mfcc.sh: Succeeded creating MFCC features for test
steps/compute_cmvn_stats.sh data/train exp/make_mfcc/train mfcc
Succeeded creating CMVN stats for train
steps/compute_cmvn_stats.sh data/test exp/make_mfcc/test mfcc
Succeeded creating CMVN stats for test

===== PREPARING LANGUAGE DATA =====

utils/prepare_lang.sh data/local/dict <UNK> data/local/lang data/lang
Checking data/local/dict/silence_phones.txt ...
--> reading data/local/dict/silence_phones.txt
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> data/local/dict/silence_phones.txt is OK

Checking data/local/dict/optional_silence.txt ...
--> reading data/local/dict/optional_silence.txt
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> data/local/dict/optional_silence.txt is OK

Checking data/local/dict/nonsilence_phones.txt ...
--> reading data/local/dict/nonsilence_phones.txt
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> data/local/dict/nonsilence_phones.txt is OK

Checking disjoint: silence_phones.txt, nonsilence_phones.txt
--> disjoint property is OK.

Checking data/local/dict/lexicon.txt
--> reading data/local/dict/lexicon.txt
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> data/local/dict/lexicon.txt is OK

Checking data/local/dict/extra_questions.txt ...
--> data/local/dict/extra_questions.txt is empty (this is OK)
--> SUCCESS [validating dictionary directory data/local/dict]

**Creating data/local/dict/lexiconp.txt from data/local/dict/lexicon.txt
fstaddselfloops data/lang/phones/wdisambig_phones.int data/lang/phones/wdisambig_words.int 
prepare_lang.sh: validating output directory
utils/validate_lang.pl data/lang
Checking existence of separator file
separator file data/lang/subword_separator.txt is empty or does not exist, deal in word case.
Checking data/lang/phones.txt ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> data/lang/phones.txt is OK

Checking words.txt: #0 ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> data/lang/words.txt is OK

Checking disjoint: silence.txt, nonsilence.txt, disambig.txt ...
--> silence.txt and nonsilence.txt are disjoint
--> silence.txt and disambig.txt are disjoint
--> disambig.txt and nonsilence.txt are disjoint
--> disjoint property is OK

Checking sumation: silence.txt, nonsilence.txt, disambig.txt ...
--> found no unexplainable phones in phones.txt

Checking data/lang/phones/context_indep.{txt, int, csl} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 10 entry/entries in data/lang/phones/context_indep.txt
--> data/lang/phones/context_indep.int corresponds to data/lang/phones/context_indep.txt
--> data/lang/phones/context_indep.csl corresponds to data/lang/phones/context_indep.txt
--> data/lang/phones/context_indep.{txt, int, csl} are OK

Checking data/lang/phones/nonsilence.{txt, int, csl} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 148 entry/entries in data/lang/phones/nonsilence.txt
--> data/lang/phones/nonsilence.int corresponds to data/lang/phones/nonsilence.txt
--> data/lang/phones/nonsilence.csl corresponds to data/lang/phones/nonsilence.txt
--> data/lang/phones/nonsilence.{txt, int, csl} are OK

Checking data/lang/phones/silence.{txt, int, csl} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 10 entry/entries in data/lang/phones/silence.txt
--> data/lang/phones/silence.int corresponds to data/lang/phones/silence.txt
--> data/lang/phones/silence.csl corresponds to data/lang/phones/silence.txt
--> data/lang/phones/silence.{txt, int, csl} are OK

Checking data/lang/phones/optional_silence.{txt, int, csl} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 1 entry/entries in data/lang/phones/optional_silence.txt
--> data/lang/phones/optional_silence.int corresponds to data/lang/phones/optional_silence.txt
--> data/lang/phones/optional_silence.csl corresponds to data/lang/phones/optional_silence.txt
--> data/lang/phones/optional_silence.{txt, int, csl} are OK

Checking data/lang/phones/disambig.{txt, int, csl} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 15 entry/entries in data/lang/phones/disambig.txt
--> data/lang/phones/disambig.int corresponds to data/lang/phones/disambig.txt
--> data/lang/phones/disambig.csl corresponds to data/lang/phones/disambig.txt
--> data/lang/phones/disambig.{txt, int, csl} are OK

Checking data/lang/phones/roots.{txt, int} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 39 entry/entries in data/lang/phones/roots.txt
--> data/lang/phones/roots.int corresponds to data/lang/phones/roots.txt
--> data/lang/phones/roots.{txt, int} are OK

Checking data/lang/phones/sets.{txt, int} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 39 entry/entries in data/lang/phones/sets.txt
--> data/lang/phones/sets.int corresponds to data/lang/phones/sets.txt
--> data/lang/phones/sets.{txt, int} are OK

Checking data/lang/phones/extra_questions.{txt, int} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 9 entry/entries in data/lang/phones/extra_questions.txt
--> data/lang/phones/extra_questions.int corresponds to data/lang/phones/extra_questions.txt
--> data/lang/phones/extra_questions.{txt, int} are OK

Checking data/lang/phones/word_boundary.{txt, int} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 158 entry/entries in data/lang/phones/word_boundary.txt
--> data/lang/phones/word_boundary.int corresponds to data/lang/phones/word_boundary.txt
--> data/lang/phones/word_boundary.{txt, int} are OK

Checking optional_silence.txt ...
--> reading data/lang/phones/optional_silence.txt
--> data/lang/phones/optional_silence.txt is OK

Checking disambiguation symbols: #0 and #1
--> data/lang/phones/disambig.txt has "#0" and "#1"
--> data/lang/phones/disambig.txt is OK

Checking topo ...

Checking word_boundary.txt: silence.txt, nonsilence.txt, disambig.txt ...
--> data/lang/phones/word_boundary.txt doesn't include disambiguation symbols
--> data/lang/phones/word_boundary.txt is the union of nonsilence.txt and silence.txt
--> data/lang/phones/word_boundary.txt is OK

Checking word-level disambiguation symbols...
--> data/lang/phones/wdisambig.txt exists (newer prepare_lang.sh)
Checking word_boundary.int and disambig.int
--> generating a 25 word/subword sequence
--> resulting phone sequence from L.fst corresponds to the word sequence
--> L.fst is OK
--> generating a 78 word/subword sequence
--> resulting phone sequence from L_disambig.fst corresponds to the word sequence
--> L_disambig.fst is OK

Checking data/lang/oov.{txt, int} ...
--> text seems to be UTF-8 or ASCII, checking whitespaces
--> text contains only allowed whitespaces
--> 1 entry/entries in data/lang/oov.txt
--> data/lang/oov.int corresponds to data/lang/oov.txt
--> data/lang/oov.{txt, int} are OK

--> data/lang/L.fst is olabel sorted
--> data/lang/L_disambig.fst is olabel sorted
--> SUCCESS [validating lang directory data/lang]

===== LANGUAGE MODEL CREATION =====
===== MAKING lm.arpa =====


===== MAKING G.fst =====

arpa2fst --disambig-symbol=#0 --read-symbol-table=data/lang/words.txt data/local/tmp/lm.arpa data/lang/G.fst 
LOG (arpa2fst[5.5.432~1-07c9d]:Read():arpa-file-parser.cc:94) Reading \data\ section.
LOG (arpa2fst[5.5.432~1-07c9d]:Read():arpa-file-parser.cc:149) Reading \1-grams: section.
LOG (arpa2fst[5.5.432~1-07c9d]:Read():arpa-file-parser.cc:149) Reading \2-grams: section.
LOG (arpa2fst[5.5.432~1-07c9d]:Read():arpa-file-parser.cc:149) Reading \3-grams: section.
LOG (arpa2fst[5.5.432~1-07c9d]:RemoveRedundantStates():arpa-lm-compiler.cc:359) Reduced num-states from 22715 to 22626

===== MONO TRAINING =====

steps/train_mono.sh --nj 4 --cmd run.pl data/train data/lang exp/mono
steps/train_mono.sh: Initializing monophone system.
steps/train_mono.sh: Compiling training graphs
steps/train_mono.sh: Aligning data equally (pass 0)
steps/train_mono.sh: Pass 1
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 2
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 3
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 4
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 5
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 6
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 7
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 8
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 9
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 10
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 11
steps/train_mono.sh: Pass 12
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 13
steps/train_mono.sh: Pass 14
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 15
steps/train_mono.sh: Pass 16
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 17
steps/train_mono.sh: Pass 18
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 19
steps/train_mono.sh: Pass 20
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 21
steps/train_mono.sh: Pass 22
steps/train_mono.sh: Pass 23
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 24
steps/train_mono.sh: Pass 25
steps/train_mono.sh: Pass 26
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 27
steps/train_mono.sh: Pass 28
steps/train_mono.sh: Pass 29
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 30
steps/train_mono.sh: Pass 31
steps/train_mono.sh: Pass 32
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 33
steps/train_mono.sh: Pass 34
steps/train_mono.sh: Pass 35
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 36
steps/train_mono.sh: Pass 37
steps/train_mono.sh: Pass 38
steps/train_mono.sh: Aligning data
steps/train_mono.sh: Pass 39
steps/diagnostic/analyze_alignments.sh --cmd run.pl data/lang exp/mono
steps/diagnostic/analyze_alignments.sh: see stats in exp/mono/log/analyze_alignments.log
8667 warnings in exp/mono/log/align.*.*.log
200 warnings in exp/mono/log/update.*.log
68 warnings in exp/mono/log/acc.*.*.log
exp/mono: nj=4 align prob=-96.17 over 25.94h [retry=0.3%, fail=0.0%] states=121 gauss=998
steps/train_mono.sh: Done training monophone system in exp/mono

===== MONO DECODING =====

WARNING: the --mono, --left-biphone and --quinphone options are now deprecated and ignored.
tree-info exp/mono/tree 
tree-info exp/mono/tree 
fsttablecompose data/lang/L_disambig.fst data/lang/G.fst 
fstminimizeencoded 
fstpushspecial 
fstdeterminizestar --use-log=true 
fstisstochastic data/lang/tmp/LG.fst 
-0.0603974 -0.0613373
[info]: LG not stochastic.
fstcomposecontext --context-size=1 --central-position=0 --read-disambig-syms=data/lang/phones/disambig.int --write-disambig-syms=data/lang/tmp/disambig_ilabels_1_0.int data/lang/tmp/ilabels_1_0.23417 data/lang/tmp/LG.fst 
fstisstochastic data/lang/tmp/CLG_1_0.fst 
-0.0603974 -0.0613373
[info]: CLG not stochastic.
make-h-transducer --disambig-syms-out=exp/mono/graph/disambig_tid.int --transition-scale=1.0 data/lang/tmp/ilabels_1_0 exp/mono/tree exp/mono/final.mdl 
fsttablecompose exp/mono/graph/Ha.fst data/lang/tmp/CLG_1_0.fst 
fstdeterminizestar --use-log=true 
fstrmsymbols exp/mono/graph/disambig_tid.int 
fstrmepslocal 
fstminimizeencoded 
fstisstochastic exp/mono/graph/HCLGa.fst 
0.000141076 -0.12117
HCLGa is not stochastic
add-self-loops --self-loop-scale=0.1 --reorder=true exp/mono/final.mdl exp/mono/graph/HCLGa.fst 
steps/decode.sh --config conf/decode.config --nj 4 --cmd run.pl exp/mono/graph data/test exp/mono/decode
decode.sh: feature type is delta
steps/diagnostic/analyze_lats.sh --cmd run.pl exp/mono/graph exp/mono/decode
steps/diagnostic/analyze_lats.sh: see stats in exp/mono/decode/log/analyze_alignments.log
Overall, lattice depth (10,50,90-percentile)=(1,1,6) and mean=4.4
steps/diagnostic/analyze_lats.sh: see stats in exp/mono/decode/log/analyze_lattice_depth_stats.log
exp/mono/decode/wer_10
%WER 7.27 [ 2696 / 37075, 430 ins, 548 del, 1718 sub ]
%SER 12.79 [ 1034 / 8085 ]
exp/mono/decode/wer_11
%WER 6.83 [ 2533 / 37075, 372 ins, 551 del, 1610 sub ]
%SER 11.90 [ 962 / 8085 ]
exp/mono/decode/wer_12
%WER 6.48 [ 2403 / 37075, 333 ins, 542 del, 1528 sub ]
%SER 11.11 [ 898 / 8085 ]
exp/mono/decode/wer_13
%WER 6.37 [ 2362 / 37075, 311 ins, 563 del, 1488 sub ]
%SER 10.70 [ 865 / 8085 ]
exp/mono/decode/wer_14
%WER 6.27 [ 2325 / 37075, 277 ins, 575 del, 1473 sub ]
%SER 10.32 [ 834 / 8085 ]
exp/mono/decode/wer_15
%WER 6.27 [ 2326 / 37075, 253 ins, 601 del, 1472 sub ]
%SER 10.15 [ 821 / 8085 ]
exp/mono/decode/wer_16
%WER 6.23 [ 2311 / 37075, 235 ins, 627 del, 1449 sub ]
%SER 10.02 [ 810 / 8085 ]
exp/mono/decode/wer_17
%WER 6.31 [ 2340 / 37075, 221 ins, 651 del, 1468 sub ]
%SER 9.96 [ 805 / 8085 ]
exp/mono/decode/wer_7
%WER 9.60 [ 3560 / 37075, 656 ins, 579 del, 2325 sub ]
%SER 17.80 [ 1439 / 8085 ]
exp/mono/decode/wer_8
%WER 8.73 [ 3235 / 37075, 579 ins, 565 del, 2091 sub ]
%SER 15.87 [ 1283 / 8085 ]
exp/mono/decode/wer_9
%WER 7.99 [ 2962 / 37075, 504 ins, 558 del, 1900 sub ]
%SER 14.20 [ 1148 / 8085 ]
exp/mono/decode//wer_10
%WER 7.27 [ 2696 / 37075, 430 ins, 548 del, 1718 sub ]
%SER 12.79 [ 1034 / 8085 ]
exp/mono/decode//wer_11
%WER 6.83 [ 2533 / 37075, 372 ins, 551 del, 1610 sub ]
%SER 11.90 [ 962 / 8085 ]
exp/mono/decode//wer_12
%WER 6.48 [ 2403 / 37075, 333 ins, 542 del, 1528 sub ]
%SER 11.11 [ 898 / 8085 ]
exp/mono/decode//wer_13
%WER 6.37 [ 2362 / 37075, 311 ins, 563 del, 1488 sub ]
%SER 10.70 [ 865 / 8085 ]
exp/mono/decode//wer_14
%WER 6.27 [ 2325 / 37075, 277 ins, 575 del, 1473 sub ]
%SER 10.32 [ 834 / 8085 ]
exp/mono/decode//wer_15
%WER 6.27 [ 2326 / 37075, 253 ins, 601 del, 1472 sub ]
%SER 10.15 [ 821 / 8085 ]
exp/mono/decode//wer_16
%WER 6.23 [ 2311 / 37075, 235 ins, 627 del, 1449 sub ]
%SER 10.02 [ 810 / 8085 ]
exp/mono/decode//wer_17
%WER 6.31 [ 2340 / 37075, 221 ins, 651 del, 1468 sub ]
%SER 9.96 [ 805 / 8085 ]
exp/mono/decode//wer_7
%WER 9.60 [ 3560 / 37075, 656 ins, 579 del, 2325 sub ]
%SER 17.80 [ 1439 / 8085 ]
exp/mono/decode//wer_8
%WER 8.73 [ 3235 / 37075, 579 ins, 565 del, 2091 sub ]
%SER 15.87 [ 1283 / 8085 ]
exp/mono/decode//wer_9
%WER 7.99 [ 2962 / 37075, 504 ins, 558 del, 1900 sub ]
%SER 14.20 [ 1148 / 8085 ]

===== MONO ALIGNMENT =====

steps/align_si.sh --nj 4 --cmd run.pl data/train data/lang exp/mono exp/mono_ali
steps/align_si.sh: feature type is delta
steps/align_si.sh: aligning data in data/train using model from exp/mono, putting alignments in exp/mono_ali
steps/diagnostic/analyze_alignments.sh --cmd run.pl data/lang exp/mono_ali
steps/diagnostic/analyze_alignments.sh: see stats in exp/mono_ali/log/analyze_alignments.log
steps/align_si.sh: done aligning data.

===== TRI1 (first triphone pass) TRAINING =====

steps/train_deltas.sh --cmd run.pl 2000 11000 data/train data/lang exp/mono_ali exp/tri1
steps/train_deltas.sh: accumulating tree stats
steps/train_deltas.sh: getting questions for tree-building, via clustering
steps/train_deltas.sh: building the tree
WARNING (gmm-init-model[5.5.432~1-07c9d]:InitAmGmm():gmm-init-model.cc:55) Tree has pdf-id 1 with no stats; corresponding phone list: 6 7 8 9 10 
** The warnings above about 'no stats' generally mean you have phones **
** (or groups of phones) in your phone set that had no corresponding data. **
** You should probably figure out whether something went wrong, **
** or whether your data just doesn't happen to have examples of those **
** phones. **
steps/train_deltas.sh: converting alignments from exp/mono_ali to use current tree
steps/train_deltas.sh: compiling graphs of transcripts
steps/train_deltas.sh: training pass 1
steps/train_deltas.sh: training pass 2
steps/train_deltas.sh: training pass 3
steps/train_deltas.sh: training pass 4
steps/train_deltas.sh: training pass 5
steps/train_deltas.sh: training pass 6
steps/train_deltas.sh: training pass 7
steps/train_deltas.sh: training pass 8
steps/train_deltas.sh: training pass 9
steps/train_deltas.sh: training pass 10
steps/train_deltas.sh: aligning data
steps/train_deltas.sh: training pass 11
steps/train_deltas.sh: training pass 12
steps/train_deltas.sh: training pass 13
steps/train_deltas.sh: training pass 14
steps/train_deltas.sh: training pass 15
steps/train_deltas.sh: training pass 16
steps/train_deltas.sh: training pass 17
steps/train_deltas.sh: training pass 18
steps/train_deltas.sh: training pass 19
steps/train_deltas.sh: training pass 20
steps/train_deltas.sh: aligning data
steps/train_deltas.sh: training pass 21
steps/train_deltas.sh: training pass 22
steps/train_deltas.sh: training pass 23
steps/train_deltas.sh: training pass 24
steps/train_deltas.sh: training pass 25
steps/train_deltas.sh: training pass 26
steps/train_deltas.sh: training pass 27
steps/train_deltas.sh: training pass 28
steps/train_deltas.sh: training pass 29
steps/train_deltas.sh: training pass 30
steps/train_deltas.sh: aligning data
steps/train_deltas.sh: training pass 31
steps/train_deltas.sh: training pass 32
steps/train_deltas.sh: training pass 33
steps/train_deltas.sh: training pass 34
steps/diagnostic/analyze_alignments.sh --cmd run.pl data/lang exp/tri1
steps/diagnostic/analyze_alignments.sh: see stats in exp/tri1/log/analyze_alignments.log
37 warnings in exp/tri1/log/update.*.log
3 warnings in exp/tri1/log/init_model.log
1 warnings in exp/tri1/log/build_tree.log
617 warnings in exp/tri1/log/align.*.*.log
1 warnings in exp/tri1/log/questions.log
199 warnings in exp/tri1/log/acc.*.*.log
exp/tri1: nj=4 align prob=-94.87 over 25.93h [retry=0.5%, fail=0.0%] states=1600 gauss=11025 tree-impr=3.93
steps/train_deltas.sh: Done training system with delta+delta-delta features in exp/tri1

===== TRI1 (first triphone pass) DECODING =====

tree-info exp/tri1/tree 
tree-info exp/tri1/tree 
fstcomposecontext --context-size=3 --central-position=1 --read-disambig-syms=data/lang/phones/disambig.int --write-disambig-syms=data/lang/tmp/disambig_ilabels_3_1.int data/lang/tmp/ilabels_3_1.28843 data/lang/tmp/LG.fst 
fstisstochastic data/lang/tmp/CLG_3_1.fst 
0 -0.0613373
[info]: CLG not stochastic.
make-h-transducer --disambig-syms-out=exp/tri1/graph/disambig_tid.int --transition-scale=1.0 data/lang/tmp/ilabels_3_1 exp/tri1/tree exp/tri1/final.mdl 
fstrmepslocal 
fsttablecompose exp/tri1/graph/Ha.fst data/lang/tmp/CLG_3_1.fst 
fstrmsymbols exp/tri1/graph/disambig_tid.int 
fstdeterminizestar --use-log=true 
fstminimizeencoded 
fstisstochastic exp/tri1/graph/HCLGa.fst 
0.598363 -0.155196
HCLGa is not stochastic
add-self-loops --self-loop-scale=0.1 --reorder=true exp/tri1/final.mdl exp/tri1/graph/HCLGa.fst 
steps/decode.sh --config conf/decode.config --nj 4 --cmd run.pl exp/tri1/graph data/test exp/tri1/decode
decode.sh: feature type is delta
steps/diagnostic/analyze_lats.sh --cmd run.pl exp/tri1/graph exp/tri1/decode
steps/diagnostic/analyze_lats.sh: see stats in exp/tri1/decode/log/analyze_alignments.log
Overall, lattice depth (10,50,90-percentile)=(1,1,2) and mean=2.5
steps/diagnostic/analyze_lats.sh: see stats in exp/tri1/decode/log/analyze_lattice_depth_stats.log
exp/tri1/decode/wer_10
%WER 5.46 [ 2023 / 37075, 480 ins, 323 del, 1220 sub ]
%SER 11.54 [ 933 / 8085 ]
exp/tri1/decode/wer_11
%WER 4.98 [ 1848 / 37075, 415 ins, 314 del, 1119 sub ]
%SER 10.50 [ 849 / 8085 ]
exp/tri1/decode/wer_12
%WER 4.69 [ 1738 / 37075, 361 ins, 326 del, 1051 sub ]
%SER 9.78 [ 791 / 8085 ]
exp/tri1/decode/wer_13
%WER 4.47 [ 1659 / 37075, 319 ins, 343 del, 997 sub ]
%SER 9.08 [ 734 / 8085 ]
exp/tri1/decode/wer_14
%WER 4.26 [ 1580 / 37075, 279 ins, 350 del, 951 sub ]
%SER 8.53 [ 690 / 8085 ]
exp/tri1/decode/wer_15
%WER 4.15 [ 1537 / 37075, 254 ins, 354 del, 929 sub ]
%SER 8.21 [ 664 / 8085 ]
exp/tri1/decode/wer_16
%WER 4.06 [ 1504 / 37075, 235 ins, 361 del, 908 sub ]
%SER 7.88 [ 637 / 8085 ]
exp/tri1/decode/wer_17
%WER 3.98 [ 1476 / 37075, 226 ins, 371 del, 879 sub ]
%SER 7.64 [ 618 / 8085 ]
exp/tri1/decode/wer_7
%WER 7.57 [ 2805 / 37075, 790 ins, 329 del, 1686 sub ]
%SER 16.54 [ 1337 / 8085 ]
exp/tri1/decode/wer_8
%WER 6.92 [ 2566 / 37075, 702 ins, 335 del, 1529 sub ]
%SER 14.69 [ 1188 / 8085 ]
exp/tri1/decode/wer_9
%WER 6.14 [ 2275 / 37075, 586 ins, 330 del, 1359 sub ]
%SER 13.00 [ 1051 / 8085 ]
exp/tri1/decode/wer_10
%WER 5.46 [ 2023 / 37075, 480 ins, 323 del, 1220 sub ]
%SER 11.54 [ 933 / 8085 ]
exp/tri1/decode/wer_11
%WER 4.98 [ 1848 / 37075, 415 ins, 314 del, 1119 sub ]
%SER 10.50 [ 849 / 8085 ]
exp/tri1/decode/wer_12
%WER 4.69 [ 1738 / 37075, 361 ins, 326 del, 1051 sub ]
%SER 9.78 [ 791 / 8085 ]
exp/tri1/decode/wer_13
%WER 4.47 [ 1659 / 37075, 319 ins, 343 del, 997 sub ]
%SER 9.08 [ 734 / 8085 ]
exp/tri1/decode/wer_14
%WER 4.26 [ 1580 / 37075, 279 ins, 350 del, 951 sub ]
%SER 8.53 [ 690 / 8085 ]
exp/tri1/decode/wer_15
%WER 4.15 [ 1537 / 37075, 254 ins, 354 del, 929 sub ]
%SER 8.21 [ 664 / 8085 ]
exp/tri1/decode/wer_16
%WER 4.06 [ 1504 / 37075, 235 ins, 361 del, 908 sub ]
%SER 7.88 [ 637 / 8085 ]
exp/tri1/decode/wer_17
%WER 3.98 [ 1476 / 37075, 226 ins, 371 del, 879 sub ]
%SER 7.64 [ 618 / 8085 ]
exp/tri1/decode/wer_7
%WER 7.57 [ 2805 / 37075, 790 ins, 329 del, 1686 sub ]
%SER 16.54 [ 1337 / 8085 ]
exp/tri1/decode/wer_8
%WER 6.92 [ 2566 / 37075, 702 ins, 335 del, 1529 sub ]
%SER 14.69 [ 1188 / 8085 ]
exp/tri1/decode/wer_9
%WER 6.14 [ 2275 / 37075, 586 ins, 330 del, 1359 sub ]
%SER 13.00 [ 1051 / 8085 ]

===== run.sh script is finished =====

